#!/usr/bin/python -u
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Christian Schwede <christian.schwede@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

import os
import optparse
import sys

from tempest_report.utils import main


if __name__ == '__main__':
    parser = optparse.OptionParser(usage='''
usage: %%prog [--level <detail level>]
             [--verbose]
             [--os-username <auth-user-name>]
             [--os-password <auth-password>]
             [--os-auth-url <auth-url>]
             [--os-tenant-name <auth-tenant-name>]
             [--release <release level>]
             [--full-run]
             [--admin]

Command-line interface for OpenStack Tempest.

Examples:
  %%prog --os-auth-url http://127.0.0.1:5000 \\
      --os-username user --os-password password --level 2
'''.strip('\n') % globals())
    parser.add_option('-l', '--level', dest='level',
                      default=1, help='Increase test level')
    parser.add_option("-v", '--verbose', action="store_true", dest="verbose",
                      help='Increase verbosity')
    parser.add_option('--os-username',
                      default=os.environ.get('OS_USERNAME'),
                      metavar='<auth-user-name>',
                      help='Openstack username. Defaults to env[OS_USERNAME].')
    parser.add_option('--os-password',
                      default=os.environ.get('OS_PASSWORD'),
                      metavar='<auth-password>',
                      help='Openstack password. Defaults to env[OS_PASSWORD].')
    parser.add_option('--os-auth-url',
                      default=os.environ.get('OS_AUTH_URL'),
                      metavar='<auth-url>',
                      help='Openstack auth URL. Defaults to env[OS_AUTH_URL].')
    parser.add_option('--os-tenant-name',
                      metavar='<auth-tenant-name>',
                      default=os.environ.get('OS_TENANT_NAME'),
                      help='Openstack tenant name. '
                           'Defaults to env[OS_TENANT_NAME].')
    parser.add_option('--os-region-name',
                      metavar='<auth-region-name>',
                      default=os.environ.get('OS_REGION_NAME'),
                      help='Openstack tenant name. '
                           'Defaults to env[OS_REGION_NAME].')
    parser.add_option('-e', '--exclude', dest="exclude",
                      help='file with a list of regex of test to exclude.')
    parser.add_option('--junit', dest="junit",
                      help="Write the result to the JUNIT file in junit format.")
    parser.add_option('-r', '--release', default=sys.maxint,
                      dest="max_release_level",
                      help='Only run tests with a release lower or equal.'
                           '(Folsom: 6, Grizzly: 7, Havana: 8 and so on)')
    parser.add_option("-f", '--full-run', action="store_true", dest="fullrun",
                      default=False, help='Run all tempest tests')
    parser.add_option("-a", '--admin', action="store_true", dest="is_admin",
                      default=False, help='User has admin permissions')

    (options, args) = parser.parse_args()

    if not (options.os_username and options.os_password and options.os_auth_url):
        parser.print_usage()
        sys.exit(1)

    if not options.verbose:
        print "Executing tests in background, this might take a while."

    main(options)
